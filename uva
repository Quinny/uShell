#!/usr/bin/env python
from uvaclient import uvaclient
import sys
import requests
import os

class command():
    def __init__(self, func, h):
        self.func = func
        self.h = h

    def __call__(self, *args):
        self.func(*args)

def sub_command(client, args):
    if (len(args) > 0):
        client.submissions(args[0])
    else:
        client.submissions()

def submit_command(client, args):
    print "Logging in..."
    client.login()
    print "Submitting..."
    client.submit(*args)
    print "Done!"

def display_command(client, args):
    url = "https://uva.onlinejudge.org/external/{0}/{1}.pdf"\
            .format(int(args[0]) / 100, args[0])
    resp = requests.get(url, stream=True)
    with open(args[0] + ".pdf", "wb") as f:
        for block in resp.iter_content(1024):
            f.write(block)
    os.system("open " + args[0] + ".pdf")

def help_command(client, args):
    print_commands()

def print_commands():
    print "Commands:"
    for name in commands.keys():
        if (name != "help"):
          print "\t" + name + " - " + commands[name].h

def leaderboard_command(client, args):
    client.leaderboard(args[0])

def user_submissions_problem(client, args):
    client.user_submissions_problem(args[0], args[1])

if __name__ == "__main__":
    commands = {
        "help": command(help_command, ""),
        "subs": command(sub_command, "Usage: uva subs [n]"),
        "submit": command(submit_command, "Usage: uva submit <problem_number> <language_option> <source_file>"),
        "display": command(display_command, "Usage: uva display <problem_number>"),
        "leaderboard": command(leaderboard_command, "Usage: leaderboard <problem_number>"),
        "userdata": command(user_submissions_problem, "Usage: userdata <user> <problem_number>")
    }

    if len(sys.argv) == 1:
        command = ""
    else:
        command = sys.argv[1]
    sys.argv = sys.argv[2:]

    if command in commands:
        u = uvaclient()
        commands[command](u, sys.argv)

    else:
        print_commands()
